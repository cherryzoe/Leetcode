/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    
    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
       if ((root.val - p.val)*(root.val - q.val) <= 0) {return root;}
        else if (root.val - p.val > 0) {return lowestCommonAncestor(root.left, p, q);}
        else {return lowestCommonAncestor(root.right, p, q);}
        
        //irretative
===========================================
        // while(true){
        //   if((root.val-p.val)*(root.val-q.val)<=0) return root;
        //   if(p.val<root.val){
        //      root=root.left;
        //   }
        //  else{
        //       root=root.right;
        //   }
        // }
        
    }
}